// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SnapliiSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AcuantCommon
import AcuantHGLiveness
import AcuantImagePreparation
import AcuantiOSSDKV11
import Foundation
import MJExtension
@_exported import SnapliiSDK
import Swift
import UIKit
import _Concurrency
import _StringProcessing
public typealias PassSelfie = (_ selfieImage: UIKit.UIImage) -> Swift.Void
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class FaceLivenessCameraController : UIKit.UIViewController, AcuantHGLiveness.AcuantHGLiveFaceCaptureDelegate {
  @objc @_Concurrency.MainActor(unsafe) public var passSelfie: SnapliiSDK.PassSelfie?
  @objc @_Concurrency.MainActor(unsafe) weak public var delegate: AcuantHGLiveness.HGLivenessDelegate?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var prefersStatusBarHidden: Swift.Bool {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didReceiveMemoryWarning()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLayoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc public func liveFaceDetailsCaptured(liveFaceDetails: AcuantHGLiveness.LiveFaceDetails?, faceType: AcuantHGLiveness.AcuantFaceType)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class SNEnvironment : ObjectiveC.NSObject {
  @objc public var name: Swift.String {
    get
  }
  @objc public var host: Swift.String {
    get
  }
  @objc public var h5Host: Swift.String {
    get
  }
  @objc public static let Test: Swift.String
  @objc public static let Stage: Swift.String
  @objc public static let Shaolin: Swift.String
  @objc public static let Sandbox: Swift.String
  @objc public static let Release: Swift.String
  @objc deinit
}
extension SnapliiSDK.SNEnvironment {
  @objc public static func environment(_ value: Swift.String) -> SnapliiSDK.SNEnvironment
}
@objc @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class AcuantProgressView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public var shouldSetupConstraints: Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) public var loadingView: UIKit.UIView!
  @objc @_Concurrency.MainActor(unsafe) public var messageView: UIKit.UILabel!
  @objc @_Concurrency.MainActor(unsafe) public var activityIndicator: UIKit.UIActivityIndicatorView!
  @objc @_Concurrency.MainActor(unsafe) public init(frame: CoreFoundation.CGRect, center: CoreFoundation.CGPoint)
  @objc @_Concurrency.MainActor(unsafe) public func startAnimation()
  @objc @_Concurrency.MainActor(unsafe) public func stopAnimation()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func updateConstraints()
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers public class SNCameraCornerOverlayView : QuartzCore.CALayer {
  public var bracketWidth: Swift.Int?
  public var bracketHeight: Swift.Int?
  public var defaultBracketMarginWidth: CoreFoundation.CGFloat?
  public var defaultBracketMarginHeight: CoreFoundation.CGFloat?
  public init(options: AcuantiOSSDKV11.CameraOptions)
  public func setColor(color: CoreGraphics.CGColor?)
  public func setDefaultCorners(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension UIKit.UIWindow {
  @objc @_Concurrency.MainActor(unsafe) public static var key: UIKit.UIWindow? {
    @objc get
  }
  @objc @_Concurrency.MainActor(unsafe) public static let main: UIKit.UIWindow
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class SNDocumentCameraController : UIKit.UIViewController {
  @objc public enum SNCameraState : Swift.Int {
    case Align = 0, MoveCloser = 1, Steady = 2, Hold = 3, Capture = 4
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc @_Concurrency.MainActor(unsafe) public class func getCameraController(delegate: AcuantiOSSDKV11.CameraCaptureDelegate, cameraOptions: AcuantiOSSDKV11.CameraOptions) -> SnapliiSDK.SNDocumentCameraController
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var prefersStatusBarHidden: Swift.Bool {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillTransition(to size: CoreFoundation.CGSize, with coordinator: UIKit.UIViewControllerTransitionCoordinator)
  @_Concurrency.MainActor(unsafe) public func rotateImage(image: UIKit.UIImage) -> UIKit.UIImage
  @_Concurrency.MainActor(unsafe) public func isDocumentMoved(points: [CoreFoundation.CGPoint]) -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) public var localizedMap: [Swift.String : Swift.String]?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension SnapliiSDK.SNDocumentCameraController : AcuantiOSSDKV11.DocumentCaptureDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func readyToCapture()
  @_Concurrency.MainActor(unsafe) @objc dynamic public func documentCaptured(image: UIKit.UIImage, barcodeString: Swift.String?)
}
extension SnapliiSDK.SNDocumentCameraController : AcuantiOSSDKV11.FrameAnalysisDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func onFrameAvailable(frameResult: AcuantiOSSDKV11.FrameResult, points: Swift.Array<CoreFoundation.CGPoint>?)
}
extension SnapliiSDK.SNDocumentCameraController : AcuantiOSSDKV11.AutoCaptureDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func getAutoCapture() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc dynamic public func setAutoCapture(autoCapture: Swift.Bool)
}
extension SnapliiSDK.SNDocumentCameraController.SNCameraState : Swift.Equatable {}
extension SnapliiSDK.SNDocumentCameraController.SNCameraState : Swift.Hashable {}
extension SnapliiSDK.SNDocumentCameraController.SNCameraState : Swift.RawRepresentable {}
